{"__symbolic":"module","version":3,"metadata":{"IscapeModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵa"}],"imports":[{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule"},{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","module":"angularfire2/auth","name":"AngularFireAuthModule"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule"},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"ɵz"},{"__symbolic":"reference","name":"ɵba"},{"__symbolic":"reference","module":"angularfire2/auth","name":"AngularFireAuthModule"},{"__symbolic":"reference","module":"angularfire2/firestore","name":"AngularFirestoreModule"},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"angularfire2","name":"AngularFireModule"},"member":"initializeApp"},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵbb"},"member":"firebase"}]}],"providers":[{"__symbolic":"reference","name":"ɵg"}],"bootstrap":[],"exports":[{"__symbolic":"reference","name":"ɵa"}]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":["config"],"value":{"ngModule":{"__symbolic":"reference","name":"IscapeModule"},"providers":[{"__symbolic":"reference","module":"angularfire2","name":"AngularFireModule"},{"provide":{"__symbolic":"reference","module":"angularfire2","name":"FirebaseAppConfigToken"},"useValue":{"__symbolic":"reference","name":"config"}},{"provide":{"__symbolic":"reference","module":"angularfire2","name":"FirebaseAppName"},"useValue":""}]}}}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"app-iscape-root","template":"\n      <!--The content below is only a placeholder and can be replaced.-->\n\n      <mat-toolbar color=\"primary\">\n          <button mat-button [routerLink]=\"['/home']\">i-Plan</button>\n          <button *ngIf=\"!(authService.user$ | async)?.uid\" class=\"login\" mat-button (click)=\"authService.login()\">Login\n          </button>\n          <button *ngIf=\"(authService.user$ | async)?.uid\" class=\"logout\" mat-button (click)=\"authService.logout()\">Logout\n          </button>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"nav-buttons\">\n              <div *ngIf=\"(authService.user$ | async)?.uid\">\n                  <button mat-button [routerLink]=\"['/items']\">Items</button>\n              </div>\n              <button mat-button [routerLink]=\"['/user-list']\">Users</button>\n              <button mat-button [routerLink]=\"['/skill-list']\">Skills</button>\n              <button mat-button [routerLink]=\"['/location-list']\">Locations</button>\n              <button mat-button [routerLink]=\"['/project-list']\">Projects</button>\n              <!--<button mat-button>Company</button>-->\n          </div>\n      </mat-toolbar>\n\n      <div style=\"margin-top: 20px\">\n          <div fxFlex=\"20\"></div>\n          <div fxFlex=\"60\">\n              <router-outlet></router-outlet>\n          </div>\n          <div fxFlex></div>\n      </div>\n\n      <!--<app-items></app-items>-->\n      <!--<router-outlet></router-outlet>-->\n    ","styles":["\n\n\n      .nav-buttons {\n          width: 100%;\n      }\n    "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵb"}]}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","module":"angularfire2/auth","name":"AngularFireAuth"}]}],"login":[{"__symbolic":"method"}],"logout":[{"__symbolic":"method"}],"getClient":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"}],"declarations":[{"__symbolic":"reference","name":"ɵd"}],"exports":[{"__symbolic":"reference","name":"ɵd"}]}]}],"members":{}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"app-iscape-home","template":"\n    <h1>All Welcome</h1>\n  ","styles":["\n\n  "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule"},"member":"forRoot"},"arguments":[[{"path":"","pathMatch":"full","redirectTo":"home"},{"path":"home","component":{"__symbolic":"reference","name":"ɵd"}},{"path":"items","component":{"__symbolic":"reference","name":"ɵf"},"canActivate":[{"__symbolic":"reference","name":"ɵg"}]},{"path":"user-list","component":{"__symbolic":"reference","name":"ɵh"}},{"path":"user-edit/:id","component":{"__symbolic":"reference","name":"ɵk"}},{"path":"skill-list","component":{"__symbolic":"reference","name":"ɵn"}},{"path":"skill-edit/:id","component":{"__symbolic":"reference","name":"ɵo"}},{"path":"project-list","component":{"__symbolic":"reference","name":"ɵp"}},{"path":"project-edit/:id","component":{"__symbolic":"reference","name":"ɵq"}},{"path":"location-list","component":{"__symbolic":"reference","name":"ɵr"}},{"path":"location-edit/:id","component":{"__symbolic":"reference","name":"ɵs"}}]]}],"exports":[{"__symbolic":"reference","module":"@angular/router","name":"RouterModule"}]}]}],"members":{}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"app-iscape-items","template":"\n      <mat-card *ngFor=\"let item of items | async\">{{item.name}}</mat-card>\n    ","styles":["\n\n    "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"angularfire2/firestore","name":"AngularFirestore"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","name":"ɵb"}]}],"canActivate":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"app-iscape-user-list","template":"\n      <mat-card *ngFor=\"let user of users | async\" [ngClass]=\"{'app-disabled': !user.isEnabled}\">\n          <div fxFlex=\"20\" fxLayoutAlign=\"start center\">\n              {{user.name}}\n          </div>\n          <div fxFlex=\"30\" fxLayoutAlign=\"start center\">\n              {{user.email}}\n          </div>\n          <div fxFlex=\"40\" fxLayoutAlign=\"start center\">\n\n          </div>\n\n          <div fxFlex=\"10\" fxLayoutAlign=\"end end\">\n              <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                  <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-menu #menu=\"matMenu\">\n                  <button mat-menu-item [routerLink]=\"['/user-edit', user.id]\">\n                      <mat-icon>edit</mat-icon>\n                      <span>Edit</span>\n                  </button>\n                  <button *ngIf=\"!user.isEnabled\" mat-menu-item (click)=\"disable(user.id, true)\">\n                      <mat-icon>check</mat-icon>\n                      <span>Enable</span>\n                  </button>\n                  <button *ngIf=\"user.isEnabled\" mat-menu-item (click)=\"disable(user.id, false)\">\n                      <mat-icon>close</mat-icon>\n                      <span>Disable</span>\n                  </button>\n              </mat-menu>\n          </div>\n      </mat-card>\n\n      <button mat-fab color=\"accent\" class=\"add\" [routerLink]=\"['/user-edit', '0']\">\n          <mat-icon aria-label=\"Add new item\">add</mat-icon>\n      </button>\n    ","styles":["\n\n    "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"angularfire2/firestore","name":"AngularFirestore"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"disable":[{"__symbolic":"method"}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵj"}]}],"getUsers":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"angularfire2/firestore","name":"AngularFirestore"},{"__symbolic":"reference","name":"ɵb"}]}],"getCollection":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"read":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"create":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"app-iscape-user-edit","template":"\n      <mat-card>\n          <form [formGroup]=\"userForm\" novalidate>\n              <div>\n                  <div fxFlex=\"70\" fxLayoutAlign=\"start center\">\n                      <div fxFlex=\"30\" fxLayoutAlign=\"start center\">\n                          <mat-form-field *ngIf=\"!isDeleteAction\">\n                              <input matInput placeholder=\"Name\" formControlName=\"name\">\n                              <mat-error *ngIf=\"formService.validate('name', 'required')\">Mandatory</mat-error>\n                          </mat-form-field>\n                      </div>\n                      <div fxFlex=\"30\" fxLayoutAlign=\"start center\">\n                          <mat-form-field *ngIf=\"!isDeleteAction\">\n                              <input matInput placeholder=\"Email\" formControlName=\"email\">\n                              <mat-error *ngIf=\"formService.validate('email', 'required')\">Mandatory</mat-error>\n                              <mat-error\n                                      *ngIf=\"!formService.validate('email', 'required') && formService.validate('email', 'email')\">\n                                  No Email\n                              </mat-error>\n                          </mat-form-field>\n                      </div>\n                  </div>\n                  <div fxFlex=\"30\" fxLayoutAlign=\"end end\">\n                      <button mat-button color=\"primary\" (click)=\"update()\">\n                          <span>Save</span>\n                      </button>\n                      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                          <mat-icon>more_vert</mat-icon>\n                      </button>\n                      <mat-menu #menu=\"matMenu\">\n                          <button *ngIf=\"!userForm.get('isEnabled').value\" mat-menu-item (click)=\"disable(true)\">\n                              <mat-icon>check</mat-icon>\n                              <span>Enable</span>\n                          </button>\n                          <button *ngIf=\"userForm.get('isEnabled').value\" mat-menu-item (click)=\"disable(false)\">\n                              <mat-icon>close</mat-icon>\n                              <span>Disable</span>\n                          </button>\n                          <button *ngIf=\"userForm.get('isEnabled').value\" mat-menu-item (click)=\"delete()\">\n                              <mat-icon>delete</mat-icon>\n                              <span>Delete</span>\n                          </button>\n                      </mat-menu>\n                  </div>\n\n              </div>\n              <div>\n\n                  <div fxFlex=\"40\" fxLayoutAlign=\"start center\" >\n                      <mat-form-field class=\"demo-chip-list\">\n                          <mat-select (selectionChange)='addSkill($event)' placeholder=\"Skills\">\n                              <!--<mat-option>None</mat-option>-->\n                              <span *ngFor=\"let skill of skills$ | async\">\n                                  <mat-option *ngIf=\"NotIsIn(skill)\" [value]=\"skill\" onselect=\"addSkill($event)\">{{skill.name}}</mat-option>\n                              </span>\n                          </mat-select>\n                      </mat-form-field>\n                  </div>\n              </div>\n              <div>\n\n                  <div fxFlex=\"70\" fxLayoutAlign=\"start center\">\n                      <mat-form-field class=\"demo-chip-list\">\n                          <mat-chip-list #chipList>\n                              <mat-chip *ngFor=\"let skill of user?.skills\" [selectable]=\"selectable\"\n                                        [removable]=\"true\" (remove)=\"removeSkill(skill)\">\n                                  {{skill.name}}\n                                  <mat-icon matChipRemove *ngIf=\"true\">cancel</mat-icon>\n                              </mat-chip>\n                          </mat-chip-list>\n                      </mat-form-field>\n                  </div>\n              </div>\n\n\n          </form>\n      </mat-card>\n\n      <button mat-fab color=\"accent\" class=\"add\" [routerLink]=\"['/user-list']\">\n          <mat-icon aria-label=\"Back to list\">reorder</mat-icon>\n      </button>\n    ","styles":["\n      .demo-chip-list {\n          width: 100%;\n      }\n    "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute"},{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"}]}],"createForm":[{"__symbolic":"method"}],"NotIsIn":[{"__symbolic":"method"}],"removeSkill":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"disable":[{"__symbolic":"method"}],"addSkill":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"setForm":[{"__symbolic":"method"}],"validate":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵj"}]}],"getSkills":[{"__symbolic":"method"}]}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"app-iscape-skill-list","template":"\n\n      <mat-card *ngFor=\"let skill of skills$ | async\"  [ngClass]=\"{'app-disabled': !skill.isEnabled}\">\n          <div  fxFlex=\"90\" fxLayoutAlign=\"start center\">\n              {{skill.name}}\n          </div>\n          <div fxFlex=\"10\" fxLayoutAlign=\"end center\">\n              <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                  <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-menu #menu=\"matMenu\">\n                  <button mat-menu-item [routerLink]=\"['/skill-edit', skill.id]\">\n                      <mat-icon>edit</mat-icon>\n                      <span>Edit</span>\n                  </button>\n                  <button *ngIf=\"!skill.isEnabled\" mat-menu-item (click)=\"disable(skill.id, true)\">\n                      <mat-icon>check</mat-icon>\n                      <span>Enable</span>\n                  </button>\n                  <button *ngIf=\"skill.isEnabled\" mat-menu-item (click)=\"disable(skill.id, false)\">\n                      <mat-icon>close</mat-icon>\n                      <span>Disable</span>\n                  </button>\n              </mat-menu>\n          </div>\n      </mat-card>\n\n      <button mat-fab color=\"accent\" class=\"add\" [routerLink]=\"['/skill-edit', '0']\">\n          <mat-icon aria-label=\"Add new item\">add</mat-icon>\n      </button>\n    ","styles":["\n\n    "],"changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy"},"member":"OnPush"}}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"angularfire2/firestore","name":"AngularFirestore"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵj"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"disable":[{"__symbolic":"method"}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"app-iscape-skill-edit","template":"\n      <mat-card>\n          <form [formGroup]=\"skillForm\" novalidate>\n              <div fxFlex=\"70\" fxLayoutAlign=\"start center\">\n                  <div fxFlex=\"50\" fxLayoutAlign=\"start center\">\n                      <mat-form-field class=\"example-full-width\" *ngIf=\"!isDeleteAction\">\n                          <input matInput placeholder=\"Name\" formControlName=\"name\">\n                          <mat-error *ngIf=\"skillForm.get('name').status==='INVALID'\">Mandatory</mat-error>\n                      </mat-form-field>\n                  </div>\n                  <div fxFlex=\"50\" fxLayoutAlign=\"start center\"></div>\n              </div>\n              <div fxFlex=\"30\" fxLayoutAlign=\"end center\">\n                  <button mat-button color=\"primary\" (click)=\"update()\">\n                      <span>Save</span>\n                  </button>\n                  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                      <mat-icon>more_vert</mat-icon>\n                  </button>\n                  <mat-menu #menu=\"matMenu\">\n                      <button *ngIf=\"!skillForm.get('isEnabled').value\" mat-menu-item (click)=\"disable(true)\">\n                          <mat-icon>check</mat-icon>\n                          <span>Enable</span>\n                      </button>\n                      <button *ngIf=\"skillForm.get('isEnabled').value\" mat-menu-item (click)=\"disable(false)\">\n                          <mat-icon>close</mat-icon>\n                          <span>Disable</span>\n                      </button>\n                      <button *ngIf=\"skillForm.get('isEnabled').value\" mat-menu-item (click)=\"delete()\">\n                          <mat-icon>delete</mat-icon>\n                          <span>Delete</span>\n                      </button>\n                  </mat-menu>\n              </div>\n          </form>\n          <!--<p>Skill Value: {{ skill | json }}</p>-->\n          <!--<p>Form value: {{ skillForm.value | json }}</p>-->\n          <!--<p>Form status: {{ skillForm.status | json }}</p>-->\n      </mat-card>\n\n\n      <button mat-fab color=\"accent\" class=\"add\" [routerLink]=\"['/skill-list']\">\n          <mat-icon aria-label=\"Back to list\">reorder</mat-icon>\n      </button>\n    ","styles":["\n\n    "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute"},{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder"}]}],"createForm":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"disable":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"app-iscape-project-list","template":"\n\n      <mat-card *ngFor=\"let project of projects$ | async\" [ngClass]=\"{'app-disabled': !project.isEnabled}\">\n        <div  fxFlex=\"90\" fxLayoutAlign=\"start center\">\n          {{project.name}}\n        </div>\n        <div fxFlex=\"10\" fxLayoutAlign=\"end center\">\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item [routerLink]=\"['/project-edit', project.id]\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button *ngIf=\"!project.isEnabled\" mat-menu-item (click)=\"disable(project.id, true)\">\n              <mat-icon>check</mat-icon>\n              <span>Enable</span>\n            </button>\n            <button *ngIf=\"project.isEnabled\" mat-menu-item (click)=\"disable(project.id, false)\">\n              <mat-icon>close</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n        </div>\n      </mat-card>\n\n      <button mat-fab color=\"accent\" class=\"add\" [routerLink]=\"['/project-edit', '0']\">\n        <mat-icon aria-label=\"Add new item\">add</mat-icon>\n      </button>\n    ","styles":["\n\n    "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵj"}]}],"disable":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"app-iscape-project-edit","template":"\n    <mat-card>\n      <form [formGroup]=\"projectForm\" novalidate>\n        <div fxFlex=\"70\" fxLayoutAlign=\"start center\">\n          <div fxFlex=\"50\" fxLayoutAlign=\"start center\">\n            <mat-form-field class=\"example-full-width\" *ngIf=\"!isDeleteAction\">\n              <input matInput placeholder=\"Name\" formControlName=\"name\">\n              <mat-error *ngIf=\"projectForm.get('name').status==='INVALID'\">Mandatory</mat-error>\n            </mat-form-field>\n          </div>\n          <div fxFlex=\"50\" fxLayoutAlign=\"start center\"></div>\n        </div>\n        <div fxFlex=\"30\" fxLayoutAlign=\"end center\">\n          <button mat-button color=\"primary\" (click)=\"update()\">\n            <span>Save</span>\n          </button>\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button *ngIf=\"!projectForm.get('isEnabled').value\" mat-menu-item (click)=\"disable(true)\">\n              <mat-icon>check</mat-icon>\n              <span>Enable</span>\n            </button>\n            <button *ngIf=\"projectForm.get('isEnabled').value\" mat-menu-item (click)=\"disable(false)\">\n              <mat-icon>close</mat-icon>\n              <span>Disable</span>\n            </button>\n            <button *ngIf=\"projectForm.get('isEnabled').value\" mat-menu-item (click)=\"delete()\">\n              <mat-icon>delete</mat-icon>\n              <span>Delete</span>\n            </button>\n          </mat-menu>\n        </div>\n      </form>\n      <p>Object Value: {{ project | json }}</p>\n      <p>Form value: {{ projectForm.value | json }}</p>\n      <p>Form status: {{ projectForm.status | json }}</p>\n    </mat-card>\n\n\n    <button mat-fab color=\"accent\" class=\"add\" [routerLink]=\"['/project-list']\">\n      <mat-icon aria-label=\"Back to list\">reorder</mat-icon>\n    </button>\n  ","styles":["\n\n  "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute"},{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder"}]}],"createForm":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"disable":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵr":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"app-iscape-location-list","template":"\n\n      <mat-card *ngFor=\"let location of locations$ | async\" [ngClass]=\"{'app-disabled': !location.isEnabled}\">\n        <div  fxFlex=\"90\" fxLayoutAlign=\"start center\">\n          {{location.name}}\n        </div>\n        <div fxFlex=\"10\" fxLayoutAlign=\"end center\">\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item [routerLink]=\"['/location-edit', location.id]\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button *ngIf=\"!location.isEnabled\" mat-menu-item (click)=\"disable(location.id, true)\">\n              <mat-icon>check</mat-icon>\n              <span>Enable</span>\n            </button>\n            <button *ngIf=\"location.isEnabled\" mat-menu-item (click)=\"disable(location.id, false)\">\n              <mat-icon>close</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n        </div>\n      </mat-card>\n\n      <button mat-fab color=\"accent\" class=\"add\" [routerLink]=\"['/location-edit', '0']\">\n        <mat-icon aria-label=\"Add new item\">add</mat-icon>\n      </button>\n    ","styles":["\n\n    "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵj"}]}],"disable":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"app-iscape-location-edit","template":"\n    <mat-card>\n      <form [formGroup]=\"locationForm\" novalidate>\n        <div fxFlex=\"70\" fxLayoutAlign=\"start center\">\n          <div fxFlex=\"50\" fxLayoutAlign=\"start center\">\n            <mat-form-field class=\"example-full-width\" *ngIf=\"!isDeleteAction\">\n              <input matInput placeholder=\"Name\" formControlName=\"name\">\n              <mat-error *ngIf=\"locationForm.get('name').status==='INVALID'\">Mandatory</mat-error>\n            </mat-form-field>\n          </div>\n          <div fxFlex=\"50\" fxLayoutAlign=\"start center\"></div>\n        </div>\n        <div fxFlex=\"30\" fxLayoutAlign=\"end center\">\n          <button mat-button color=\"primary\" (click)=\"update()\">\n            <span>Save</span>\n          </button>\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button *ngIf=\"!locationForm.get('isEnabled').value\" mat-menu-item (click)=\"disable(true)\">\n              <mat-icon>check</mat-icon>\n              <span>Enable</span>\n            </button>\n            <button *ngIf=\"locationForm.get('isEnabled').value\" mat-menu-item (click)=\"disable(false)\">\n              <mat-icon>close</mat-icon>\n              <span>Disable</span>\n            </button>\n            <button *ngIf=\"locationForm.get('isEnabled').value\" mat-menu-item (click)=\"delete()\">\n              <mat-icon>delete</mat-icon>\n              <span>Delete</span>\n            </button>\n          </mat-menu>\n        </div>\n      </form>\n      <p>Object Value: {{ location | json }}</p>\n      <p>Form value: {{ locationForm.value | json }}</p>\n      <p>Form status: {{ locationForm.status | json }}</p>\n    </mat-card>\n\n\n    <button mat-fab color=\"accent\" class=\"add\" [routerLink]=\"['/location-list']\">\n      <mat-icon aria-label=\"Back to list\">reorder</mat-icon>\n    </button>\n  ","styles":["\n\n  "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute"},{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder"}]}],"createForm":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"disable":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵt":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","name":"ɵu"}],"declarations":[{"__symbolic":"reference","name":"ɵf"}],"exports":[{"__symbolic":"reference","name":"ɵf"}]}]}],"members":{}},"ɵu":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},[{"__symbolic":"reference","module":"@angular/material","name":"MatToolbarModule"},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatMenuModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatSlideToggleModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatChipsModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatFormFieldModule"}]],"exports":[[{"__symbolic":"reference","module":"@angular/material","name":"MatToolbarModule"},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatMenuModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatSlideToggleModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatChipsModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule"},{"__symbolic":"reference","module":"@angular/material","name":"MatFormFieldModule"}]],"declarations":[]}]}],"members":{}},"ɵv":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule"}],"declarations":[{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵs"}]}]}],"members":{}},"ɵw":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule"},"member":"forRoot"},"arguments":[[{"path":"","pathMatch":"full","redirectTo":"home"},{"path":"home","component":{"__symbolic":"reference","name":"ɵd"}},{"path":"items","component":{"__symbolic":"reference","name":"ɵf"},"canActivate":[{"__symbolic":"reference","name":"ɵg"}]},{"path":"user-list","component":{"__symbolic":"reference","name":"ɵh"}},{"path":"user-edit/:id","component":{"__symbolic":"reference","name":"ɵk"}},{"path":"skill-list","component":{"__symbolic":"reference","name":"ɵn"}},{"path":"skill-edit/:id","component":{"__symbolic":"reference","name":"ɵo"}},{"path":"project-list","component":{"__symbolic":"reference","name":"ɵp"}},{"path":"project-edit/:id","component":{"__symbolic":"reference","name":"ɵq"}},{"path":"location-list","component":{"__symbolic":"reference","name":"ɵr"}},{"path":"location-edit/:id","component":{"__symbolic":"reference","name":"ɵs"}}]]}],"exports":[{"__symbolic":"reference","module":"@angular/router","name":"RouterModule"}]}]}],"members":{}},"ɵx":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule"}],"declarations":[{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"}]}]}],"members":{}},"ɵy":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"}],"declarations":[],"providers":[{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵl"}],"exports":[]}]}],"members":{}},"ɵz":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule"}],"declarations":[{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"}],"providers":[{"__symbolic":"reference","name":"ɵm"}]}]}],"members":{}},"ɵba":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule"}],"declarations":[{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵk"}],"providers":[{"__symbolic":"reference","name":"ɵi"}]}]}],"members":{}},"ɵbb":{"production":false,"firebase":{"apiKey":"AIzaSyCt3bRgcaGnqaUg5BN-6d2SSVJP6cIYFJU","authDomain":"iscape-plan.firebaseapp.com","databaseURL":"https://iscape-plan.firebaseio.com","projectId":"iscape-plan","storageBucket":"iscape-plan.appspot.com","messagingSenderId":"246064338722"}}},"origins":{"IscapeModule":"./src/app/iscape/iscape.module","ɵa":"./src/app/iscape/iscape.component","ɵb":"./src/app/iscape/shared/auth.service","ɵc":"./src/app/iscape/home/home.module","ɵd":"./src/app/iscape/home/home.component","ɵe":"./src/app/iscape/iscape-routing.module","ɵf":"./src/app/iscape/items/items/items.component","ɵg":"./src/app/iscape/shared/auth.guard","ɵh":"./src/app/iscape/user/user-list/user-list.component","ɵi":"./src/app/iscape/user/user.service","ɵj":"./src/app/iscape/shared/data.service","ɵk":"./src/app/iscape/user/user-edit/user-edit.component","ɵl":"./src/app/iscape/shared/form.service","ɵm":"./src/app/iscape/skill/skill.service","ɵn":"./src/app/iscape/skill/skill-list/skill-list.component","ɵo":"./src/app/iscape/skill/skill-edit/skill-edit.component","ɵp":"./src/app/iscape/project/project-list/project-list.component","ɵq":"./src/app/iscape/project/project-edit/project-edit.component","ɵr":"./src/app/iscape/location/location-list/location-list.component","ɵs":"./src/app/iscape/location/location-edit/location-edit.component","ɵt":"./src/app/iscape/items/items.module","ɵu":"./src/app/iscape/material/material.module","ɵv":"./src/app/iscape/location/location.module","ɵw":"./src/app/app-routing.module","ɵx":"./src/app/iscape/project/project.module","ɵy":"./src/app/iscape/shared/shared.module","ɵz":"./src/app/iscape/skill/skill.module","ɵba":"./src/app/iscape/user/user.module","ɵbb":"./src/environments/environment"},"importAs":"iscape-plan"}